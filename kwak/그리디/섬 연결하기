import java.util.ArrayList;
class Solution {
    public static int solution(int n, int[][] costs) {
	        int answer = 0;
	        int[][] link = new int[n][n];
	        int minCost = costs[0][2];
	        int minIsland1 = costs[0][0] , minIsland2 = costs[0][1];
	        
	        ArrayList<Boolean> visited = new ArrayList<>();
	        for(int i=0; i<n; i++) {
	        	visited.add(false);
	        }
	        for(int i=0; i<costs.length; i++) {
	        	link[costs[i][0]][costs[i][1]] = costs[i][2];
	        	link[costs[i][1]][costs[i][0]] = costs[i][2];
	        	
	        	if(costs[i][2] < minCost) {
	        		minCost = costs[i][2];
	        		minIsland1 = costs[i][0];
	        		minIsland2 = costs[i][1];
	        	}
	        }
	        while(visited.contains(false)) {
	        	answer += minCost;
	        	visited.set(minIsland1, true);
	        	visited.set(minIsland2, true);
	        	minCost = Integer.MAX_VALUE;
	        	
	        	for(int i=0; i<n; i++) {
	        		if(visited.get(i) == true) {
	        			for(int j=0; j<n; j++) {
	        				if(link[i][j] != 0 && visited.get(j) == false && minCost > link[i][j]) {
	        					minCost = link[i][j];
	        					minIsland1 = i;
	        					minIsland2 = j;
	        				}
	        			}
	        		}
	        	}
	        }
	        System.out.println(answer);
	        return answer;
	    }
}
